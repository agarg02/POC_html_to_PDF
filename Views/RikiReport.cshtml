@using System
@using System.Globalization;
@using System.Collections.Generic
@using static JSON_To_PDF.Response.Result;
@using System.Linq;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>RIKI Reports</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap" rel="stylesheet" />
    <style>
        .main-table {
            margin: 0px -20px 0px -20px;
            padding: 0px;
            font-family: "Roboto", sans-serif;
            background-color: #fff;
        }

        .calender-table th {
            padding: 5px 6px;
            font-size: 12px;
            white-space: nowrap;
        }

        tr {
            page-break-inside: avoid;
        }
    </style>
</head>
<body style="background-color:  white; ">

    <table class="main-table" border-spacing="0" cellpadding="0" cellspacing="0" style="
       ">
        <tr>
            <td align="justify">
                <span style="background: linear-gradient(90deg, rgba(193, 139, 64, 0) -30%, rgba(193, 57, 19, 1) 27%, rgba(36, 112, 230, 1) 46%, rgba(62, 200, 159, 1) 72%, rgba(47, 237, 237, 1) 100%, rgba(245, 250, 255, 1) 100%);
            height:2px;width:600px;display:block;"></span>
            </td>
            <td align="right"
                style="font-family: 'Roboto', sans-serif;letter-spacing: 3px;font-size:25px;color:#000;font-weight:600;width:136px;">
                47Billion
            </td>
        </tr>
        </table>

    <table border-spacing="0" cellpadding="0" cellspacing="0" class="main-table" style="width: 70%">
        <tr>
            <td colspan="2">
                <table style="width: 80%">
                    <tr>
                        <td style="width: 50%; text-align: left; vertical-align: text-top; padding-top: 20px;">
                            <p style="margin: 0; font-size: 22px; font-weight: 600;">
                                RIKI™ Report
                            </p>
                            <p style="margin: 0 0 30px; font-size: 17px; color: #ccc;">
                                Alternative Data Intelligence
                            </p>
                            <p style="margin: 0; letter-spacing: 1px; font-size: 30px; color: #000; font-weight: 600; font-family: 'Roboto', sans-serif;">
                                @Model.Consumer?.FirstName @Model.Consumer?.LastName
                            </p>
                        </td>
                        <td style="width: 50%;  text-align: left;">
                            <table style="border: 1px solid #999; padding: 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Report Information
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 8px 0 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        Report ID
                                    </td>
                                    <td style="padding: 8px 0 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        TBA
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 8px 0 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        Report Date
                                    </td>
                                    <td style="padding: 8px 0 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        09/05/2023
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        Email
                                    </td>
                                    <td style="padding: 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        @Model.Consumer?.Email[0]
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 5px 15px 5px 0; font-size: 13px; white-space: nowrap; font-family: 'Roboto', sans-serif;">
                                        Phone Number
                                    </td>
                                    <td style="padding: 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        @Model.Consumer?.PhoneNumber
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 5px 0; font-size: 13px; vertical-align: text-top; font-family: 'Roboto', sans-serif;">
                                        History Available
                                    </td>
                                    <td style="padding: 5px 0; font-size: 13px; font-family: 'Roboto', sans-serif;">
                                        {DepletionDays} Days
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding-bottom: 15px;">
                <p style="font-size: 20px; font-weight: 500; margin: 0;">
                    Ability to Pay Metrics
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <table style="width: 80%;">
                    <tr>
                        <td style="width: 50%; padding-right: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        RIKI Index
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 35px; font-weight: 500; text-align: center;">
                                            @Model.RikiData?.RIKI
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p style="font-size: 12px; margin: 0; font-weight: 500;">
                                            Excellent Rating
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p style="font-size: 12px; margin: 0;">
                                            Weighted combination of cash flow and income. Scale
                                            <br />
                                            centered on 100.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 50%; padding-left: 10px; white-space: nowrap; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px 42px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        RIKI Trend
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 35px; font-weight: 500; text-align: center;">
                                            @Model.RikiData?.RIKIasWords
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p style="font-size: 12px; margin: 0;">
                                            Trending up by 1.5 points monthly
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding-top: 20px;">
                <table style="width: 80%;">
                    <tr>
                        <td style="width: 50%; padding-right: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2" style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Cash Flow Index
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 35px; font-weight: 500; text-align: center;">
                                            @Model.RikiData?.CashFlowIndex
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p style="font-size: 12px; margin: 0;">
                                            Normal range (interquartile range) is 100-115
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 50%; padding-left: 10px; white-space: nowrap; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Cash Flow Index Trend
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 35px; font-weight: 500; text-align: center;">
                                            @Model.RikiData?.CashFlowIndexTrend
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p style="font-size: 12px; margin: 0;">
                                            Trending up 1.4 points monthly
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
        
            <td colspan="2" style="padding-top: 30px 0;">
                @*daysinmonth table start*@
                <table class="calender-table" style="width: 80%; border-spacing: 5px;">
                     @if (true)
                    {
                        List<HeaderResponse> UniqueFormattedDates = new List<HeaderResponse>();
                        List<HeaderResponse> FilteredValue;
                        <tr style="font-family: 'Roboto', sans-serif;width:max-content">
                            <th></th>

                            @foreach (var calendar in @Model.CalendarMonthStatistics)
                            {
                                DateTime parsedDate;
                                if (DateTime.TryParseExact(calendar.Label, "M/yyyy", CultureInfo.InvariantCulture, DateTimeStyles.None, out parsedDate))
                                {
                                    string formattedDate = parsedDate.ToString("MMM-yy");

                                    HeaderResponse uniqueformatteddate = new HeaderResponse();
                                    uniqueformatteddate.ActualValue = DateTime.ParseExact(calendar.Label, "MM/yyyy", null);
                                    uniqueformatteddate.FormattedValue = formattedDate;
                                    UniqueFormattedDates.Add(uniqueformatteddate);
                                }
                            }

                            @if(true){
                                FilteredValue = UniqueFormattedDates.OrderByDescending(date => date.ActualValue).Take(6).ToList();
                                @foreach (var filter in FilteredValue)
                                {
                                        <th style="font-family: 'Roboto', sans-serif; text-align: center; font-weight: 500; border-radius: 4px; background-color: #919191; color: #fff;">
                                            @filter.FormattedValue
                                        </th>
                                }
                                <th style="font-family: 'Roboto', sans-serif; text-align: center; font-weight: 500; border-radius: 4px; background-color: #919191; color: #fff;">
                                    Avg
                                </th>
                            }
                        </tr>

                        <tr>
                            <td style="
                                  font-family: 'Roboto', sans-serif;
                                  font-size: 13px;
                                  border-radius: 4px;
                                  border: 1px solid #ddd;
                                  padding: 5px 10px;
                                  white-space: nowrap;
                                ">
                                Days in Month
                            </td>

                            @if(true){
                                int totalValue = 0;
                                int totalCount = 0;
                                @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                                    {
                                        @foreach (var headerdate in FilteredValue)
                                        {
                                            if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                            {
                                                          <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                                            @daysinmonth.MonthlyStatistics[0].DaysInMonth
                                            </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyStatistics[0].DaysInMonth;
                                            }

                                        }
                                    }
                                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                                        @(totalValue / totalCount)
                                                </td>
                            }
                            
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Data Completeness
                            </td>

                               @if(true){
                                double totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                 font-family: 'Roboto', sans-serif;
                                                  font-size: 13px;
                                                  border-radius: 4px;
                                                  border: 1px solid #ddd;
                                                  padding: 5px 10px;
                                                  white-space: nowrap;
                                                  text-align: right;
                                                ">
                                                @Math.Round(@daysinmonth.MonthlyAnalyses[0].MonthlyDataCompleteness, 2)
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyAnalyses[0].MonthlyDataCompleteness;
                                    }
                                }
                            }
                                                         <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    @Math.Round((totalValue / totalCount),2)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                # Accounts Tracked
                            </td>

                               @if(true){
                                int totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                 font-family: 'Roboto', sans-serif;
                                                  font-size: 13px;
                                                  border-radius: 4px;
                                                  border: 1px solid #ddd;
                                                  padding: 5px 10px;
                                                  white-space: nowrap;
                                                  text-align: right;
                                                ">
                                            @daysinmonth.MonthlyStatistics[0].AccountsTracked
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyStatistics[0].AccountsTracked;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    @(totalValue / totalCount)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                # Income Transactions
                            </td>

                            @if (true)
                            {
                                int totalValue = 0;
                                int totalCount = 0;
                                @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                                {
                                @foreach (var headerdate in FilteredValue)
                                    {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                        {
                                        <td style="
                                                  font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                            @daysinmonth.MonthlyStatistics[0].IncomeTransactions
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyStatistics[0].IncomeTransactions;
                                        }
                                    }
                                }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    @(totalValue / totalCount)
                                </td>
                            }

                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                # Expense Transactions
                            </td>

                               @if(true){
                                int totalValue = 0;
                                int totalCount = 0;
                             @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                    ">
                                            @daysinmonth.MonthlyStatistics[0].ExpenseTransactions
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyStatistics[0].ExpenseTransactions;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    @(totalValue / totalCount)
                                </td>
                            }

                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Total Income
                            </td>

                               @if(true){
                                int totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                            $@daysinmonth.MonthlyStatistics[0].TotalAmountIncomeTransactions
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyStatistics[0].TotalAmountIncomeTransactions;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    $@(totalValue / totalCount)
                                </td>
                            }

                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Total Expenses
                            </td>

                               @if(true){
                                int totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                            @daysinmonth.MonthlyStatistics[0].TotalAmountExpenseTransactions
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyStatistics[0].TotalAmountExpenseTransactions;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    @(totalValue / totalCount)
                                </td>
                            }

                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Total Money Handled
                            </td>
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                            -
                                        </td>
                                    }
                                }
                            }
                    
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Largest Transaction
                            </td>

                               @if(true){
                                int totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                            $@daysinmonth.MonthlyStatistics[0].LargestSingleTransactionNotAcctToAcctTransfers
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyStatistics[0].LargestSingleTransactionNotAcctToAcctTransfers;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    $@(totalValue / totalCount)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Discretionary Spending
                            </td>

                            @if(true){
                                double totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                                $@Math.Round(@daysinmonth.MonthlyAnalyses[0].EstimatedDiscretionarySpending, 2)
                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyAnalyses[0].EstimatedDiscretionarySpending;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    $@Math.Round((totalValue / totalCount),2)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                % Disc. Spending
                            </td>
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                            -
                                        </td>
                                    }
                                }
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Available Income
                            </td>

                            @if(true){
                                double totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                                $@Math.Round(@daysinmonth.MonthlyAnalyses[0].UnadjustedAvailableIncome, 2)

                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyAnalyses[0].UnadjustedAvailableIncome;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    $@Math.Round((totalValue / totalCount),2)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Adjusted Av. Income
                            </td>

                            @if(true){
                                double totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                                $@Math.Round(@daysinmonth.MonthlyAnalyses[0].AdjustedAvailableIncome, 2)

                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyAnalyses[0].AdjustedAvailableIncome;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    $@Math.Round((totalValue / totalCount),2)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Average Daily Spend
                            </td>

                            @if(true){
                                double totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                                $@Math.Round(@daysinmonth.MonthlyAnalyses[0].AvgDailySpending, 2)

                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyAnalyses[0].AvgDailySpending;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    $@Math.Round((totalValue / totalCount),2)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="
                  font-family: 'Roboto', sans-serif;
                  font-size: 13px;
                  border-radius: 4px;
                  border: 1px solid #ddd;
                  padding: 5px 10px;
                  white-space: nowrap;
                ">
                                Income/Expense Ratio
                            </td>

                            @if(true){
                                double totalValue = 0;
                                int totalCount = 0;
                            @foreach (var daysinmonth in @Model.CalendarMonthStatistics)
                            {
                                @foreach (var headerdate in FilteredValue)
                                {
                                    if (daysinmonth.Label == headerdate.ActualValue.ToString("MM/yyyy"))
                                    {
                                        <td style="
                                                    font-family: 'Roboto', sans-serif;
                                                      font-size: 13px;
                                                      border-radius: 4px;
                                                      border: 1px solid #ddd;
                                                      padding: 5px 10px;
                                                      white-space: nowrap;
                                                      text-align: right;
                                                ">
                                                @Math.Round(@daysinmonth.MonthlyAnalyses[0].IncomeExpenseRatio, 2)

                                        </td>
                                            ++totalCount;
                                            totalValue += @daysinmonth.MonthlyAnalyses[0].IncomeExpenseRatio;
                                    }
                                }
                            }
                                <td style="
                                                          font-family: 'Roboto', sans-serif;
                                                          font-size: 13px;
                                                          border-radius: 4px;
                                                          border: 1px solid #ddd;
                                                          padding: 5px 10px;
                                                          white-space: nowrap;
                                                          text-align: right;
                                                        ">
                                    @Math.Round((totalValue / totalCount),2)
                                </td>
                            }
                        </tr>
                    }
                </table>
                @*daysinmonth table end*@
            </td>
        </tr>
        <tr>
            <td align="center" colspan="2" style="padding: 30px 0;">
                <span style="background: linear-gradient(90deg, rgba(193, 139, 64, 0) -30%, rgba(193, 57, 19, 1) 27%, rgba(36, 112, 230, 1) 46%, rgba(62, 200, 159, 1) 72%, rgba(47, 237, 237, 1) 100%, rgba(245, 250, 255, 1) 100%);height: 2px;display: block;"></span>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding-bottom: 15px;">
                <p style="font-size: 20px; font-weight: 500; margin: 0; font-family: 'Roboto', sans-serif;">
                    Income Analysis
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <table width: 80%;>
                    <tr>
                        <td style="width: 33.3%; padding-right: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2" style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Typical Monthly Income
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            $ @Model.RikiData?.TypicalMonthsTotalIncome
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 15px;">
                                        <p style="color: #777; margin: 0; font-size: 12px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            Average of typical months.
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p style="font-size: 12px; margin: 0; font-family: 'Roboto', sans-serif;">
                                            <span style="color: #5d1fc9; font-weight: bold;">Monthly Income Trend:</span>
                                            Approximately constant.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33.3%; padding-right: 10px; padding-left: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Typical Monthly Residual Income
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            $ @Model.RikiData?.TypicalMonthsAdjustedAvailableIncome
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 33px;">
                                        <p style="font-size: 12px; margin: 0; font-weight: 500; font-family: 'Roboto', sans-serif;">
                                            Unspent income, average of typical months.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33.3%; padding-right: 10px; padding-left: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Month-to-Month Stability Score
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            @Model.RikiData?.MonthToMonthStabilityScore
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 33px;">
                                        <p style="font-size: 12px; margin: 0; font-weight: 500; font-family: 'Roboto', sans-serif;">
                                            Scale centered on 100.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td align="center" colspan="2" style="padding: 30px 0;">
                <span style="background: linear-gradient(90deg, rgba(193, 139, 64, 0) -30%, rgba(193, 57, 19, 1) 27%, rgba(36, 112, 230, 1) 46%, rgba(62, 200, 159, 1) 72%, rgba(47, 237, 237, 1) 100%, rgba(245, 250, 255, 1) 100%);height: 2px;display: block;"></span>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding-bottom: 15px;">
                <p style="font-size: 20px; font-weight: 500; margin: 0; font-family: 'Roboto', sans-serif;">
                    Rent Verification
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <table style="width: 80%;">
                    <tr>
                        <td style="width: 33.3%; padding-right: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2" style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Consecutive Recognized Payments
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            18
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 15px;">
                                        <p style="font-size: 12px; margin: 0; font-weight: 500; font-family: 'Roboto', sans-serif;">
                                            Number of consecutive payments recognized as rent.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33.3%; padding-right: 10px; padding-left: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Consecutive Candidate Payments
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            26
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 0;">
                                        <p style="font-size: 12px; margin: 0; font-weight: 500; font-family: 'Roboto', sans-serif;">
                                            Number of consecutive payments categorized as potential rent.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33.3%; padding-right: 10px; padding-left: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2" style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Stated Rent Amount
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            $1,875.00
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 13px;">
                                        <p style="font-size: 12px; margin: 0; font-weight: 500; font-family: 'Roboto', sans-serif;">
                                            Rent payment from URLA.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding: 30px 0;">
                <table style="width: 80%; border-spacing: 5px;">
                    <tr>
                        <th style="font-family: 'Roboto', sans-serif; text-align: left; font-weight: 500; border-radius: 4px; padding: 5px 10px; background-color: #919191; color: #fff; font-size: 13px;">
                            Date
                        </th>
                        <th style="font-family: 'Roboto', sans-serif; text-align: left; font-weight: 500; border-radius: 4px; padding: 5px 10px; background-color: #919191; color: #fff; font-size: 13px;">
                            Amount
                        </th>
                        <th style="font-family: 'Roboto', sans-serif; text-align: left; font-weight: 500; border-radius: 4px; padding: 5px 10px; background-color: #919191; color: #fff; font-size: 13px;">
                            Acct. #
                        </th>
                        <th style="font-family: 'Roboto', sans-serif; text-align: left; font-weight: 500; border-radius: 4px; padding: 5px 10px; background-color: #919191; color: #fff; font-size: 13px;">
                            Description
                        </th>

                    </tr>

                    @if(@Model.GroupedTransactions != null && @Model.GroupedTransactions.Count != 0){
                    @foreach (var grouptransaction in @Model.GroupedTransactions){
                    @if(@grouptransaction.GroupedAccountData != null && @grouptransaction.GroupedAccountData.Count != 0){
                    @foreach (var groupaccountdata in grouptransaction.GroupedAccountData){
                    @if (@groupaccountdata.Transactions != null && @groupaccountdata.Transactions.Count != 0){
                    @foreach (var transaction in @groupaccountdata.Transactions){
                    <tr>
                        <td style="" font-family: 'Roboto' , sans-serif;font-size: 13px;border-radius: 4px;
                            border:1px solid #ddd;padding:5px 10px;"">
                            @transaction.Date.ToShortDateString()
                        </td>
                        <td style="" font-family: 'Roboto' , sans-serif;font-size: 13px;border-radius: 4px;
                            border:1px solid #ddd;padding:5px 10px;"">
                            $ @transaction.Amount
                        </td>
                        <td style="" font-family: 'Roboto' , sans-serif;font-size: 13px;border-radius: 4px;
                            border:1px solid #ddd;padding:5px 10px;"">
                            @groupaccountdata.AccountType
                        </td>
                        <td style="" font-family: 'Roboto' , sans-serif;font-size: 13px;border-radius: 4px;
                            border:1px solid #ddd;padding:5px 10px;"">
                             @transaction.Description
                        </td>
                    </tr>
                    }
                    }
                    }
                    }
                    }
                    }
                </table>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding-bottom: 15px;">
                <p style="font-size: 20px; font-weight: 500; margin: 0; font-family: 'Roboto', sans-serif;">
                    Other Recurring Payments
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <table style="width: 80%;">
                    <tr>
                        <td style="width: 50%; padding-right: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2"
                                        style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Consecutive Recognized Utility Payments
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            34
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 0;">
                                        <p style="font-size: 12px; margin: 0; font-weight: 500; font-family: 'Roboto', sans-serif;">
                                            Consecutive months of consistent utility payments.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 50%; padding-left: 10px; vertical-align: text-top;">
                            <table style="border: 1px solid #999; padding: 12px 12px; border-radius: 10px; width: 100%;">
                                <tr>
                                    <td colspan="2" style="background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(93, 31, 201, 1) 0%, rgba(180, 78, 218, 1) 100%);padding: 6px 10px 7px;border-radius: 4px;color: #fff;font-size: 12px;font-family: 'Roboto', sans-serif;">
                                        Average Montly Utility Payment
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding: 15px 0;">
                                        <p style="color: #777; margin: 0; font-size: 30px; font-weight: 500; text-align: center; font-family: 'Roboto', sans-serif;">
                                            $1,875.00
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-bottom: 0;">
                                        <p style="font-size: 12px; margin: 0; font-weight: 500; font-family: 'Roboto', sans-serif;">
                                            Average monthly amont.
                                        </p>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding: 30px 0;">
                @*Other table start*@
                <table class="calender-table" style="width: 80%; border-spacing: 5px;">
                       @if (true)
                    {
                        List<HeaderResponse> UniqueFormattedDates = new List<HeaderResponse>();
                        <tr>
                            <th></th>


                            @foreach (var groupedtransaction in @Model.GroupedTransactions)
                            {
                                @if (groupedtransaction.GroupType.Split("__")[0] != "INCOME" && groupedtransaction.GroupType.Split("__")[0] != "EXPENSES" && 
                                groupedtransaction.GroupedAccountData.Count > 0)
                                {
                                    @foreach (var groupedaccountdata in @groupedtransaction.GroupedAccountData)
                                    {

                                        @if (@groupedaccountdata.Transactions.Count > 0)
                                        {

                                            @foreach (var transactions in @groupedaccountdata.Transactions)
                                            {

                                                if ((DateTime.TryParseExact(transactions.Date.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime parsedDate))
                                                && UniqueFormattedDates.Count < 12)
                                                {
                                                    string formattedDate = parsedDate.ToString("MMM-yy");


                                                    bool exists = UniqueFormattedDates.Any(value => value.FormattedValue == formattedDate);


                                                    @if (!exists)
                                                    {
                                                        HeaderResponse uniqueformatteddate = new HeaderResponse();


                                                        uniqueformatteddate.ActualValue = transactions.Date;
                                                        uniqueformatteddate.FormattedValue = formattedDate;
                                                        UniqueFormattedDates.Add(uniqueformatteddate);

                                                        <th style="
                                                                  font-family: 'Roboto', sans-serif;
                                                                  text-align: center;
                                                                  font-weight: 500;
                                                                    font-size: 10px;
                                                                  border-radius: 4px;
                                                                  background-color: #919191;
                                                                  color: #fff;
                                                                  white-space: nowrap;
                                                                ">
                                                            @formattedDate
                                                        </th>
                                                    }

                                                }
                                            }

                                        }

                                    }
                                }
                            }





                        </tr>

                        @*other data binding start*@
                        @foreach (var groupedtransaction in @Model.GroupedTransactions)
                        {
                            @if (groupedtransaction.GroupType.Split("__")[0] != "INCOME" && groupedtransaction.GroupType.Split("__")[0] != "EXPENSES"
                            && groupedtransaction.GroupedAccountData.Count > 0 && UniqueFormattedDates.Count > 0)
                            {
                                <tr>
                                    <td style="
                                          font-family: 'Roboto', sans-serif;
                                          font-size: 9px;
                                          border-radius: 4px;
                                          border: 1px solid #ddd;
                                          padding: 5px 10px;
                                          white-space: nowrap;
                                        ">
                                        @groupedtransaction.GroupType.Split("__")[1]
                                    </td>
                                    @foreach (var groupedaccountdata in @groupedtransaction.GroupedAccountData)
                                    {

                                        @if (@groupedaccountdata.Transactions.Count > 0)
                                        {

                                            @foreach (var headervalue in UniqueFormattedDates)
                                            {

                                                var filteredData = ((IEnumerable<dynamic>)groupedaccountdata.Transactions).FirstOrDefault(x => x.Date.Year ==
                                                headervalue.ActualValue.Year && x.Date.Month ==
                                                headervalue.ActualValue.Month);

                                                if (filteredData != null)
                                                {
                                                    <td style="
                                                              font-family: 'Roboto', sans-serif;
                                                              font-size: 9px;
                                                              border-radius: 4px;
                                                              border: 1px solid #ddd;
                                                              padding: 5px 10px;
                                                              white-space: nowrap;
                                                              text-align: right;
                                                            ">
                                                        $@filteredData.Amount
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td style="
                                                              font-family: 'Roboto', sans-serif;
                                                              font-size: 9px;
                                                              border-radius: 4px;
                                                              border: 1px solid #ddd;
                                                              padding: 5px 10px;
                                                              white-space: nowrap;
                                                              text-align: right;
                                                            ">
                                                        -
                                                    </td>
                                                }
                                            }

                                        }

                                    }

                                </tr>
                            }
                        }
                        @*other data binding end*@
                    }
                </table>
                @*other table start*@
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <p style="margin: 0; font-size: 30px; font-weight: 500; font-family: 'Roboto', sans-serif;">
                    Income & Expense Summary
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding: 15px 0 20px;">
                <p style="margin: 0; font-size: 24px; font-weight: 400; font-family: 'Roboto', sans-serif;">
                    Monthly Income
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @*Income table start*@
                <table class="calender-table" style="width: 80%; border-spacing: 5px;">
                        @if (true)
                    {
                        List<HeaderResponse> UniqueFormattedDates = new List<HeaderResponse>();
                        <tr>
                            <th></th>


                            @foreach (var groupedtransaction in @Model.GroupedTransactions)
                            {
                                @if (groupedtransaction.GroupType.Split("__")[0] == "INCOME" && groupedtransaction.GroupedAccountData.Count > 0)
                                {
                                    @foreach (var groupedaccountdata in @groupedtransaction.GroupedAccountData)
                                    {

                                        @if (@groupedaccountdata.Transactions.Count > 0)
                                        {

                                            @foreach (var transactions in @groupedaccountdata.Transactions)
                                            {

                                                if ((DateTime.TryParseExact(transactions.Date.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime parsedDate))
                                                && UniqueFormattedDates.Count < 12)
                                                {
                                                    string formattedDate = parsedDate.ToString("MMM-yy");


                                                    bool exists = UniqueFormattedDates.Any(value => value.FormattedValue == formattedDate);


                                                    @if (!exists)
                                                    {
                                                        HeaderResponse uniqueformatteddate = new HeaderResponse();


                                                        uniqueformatteddate.ActualValue = transactions.Date;
                                                        uniqueformatteddate.FormattedValue = formattedDate;
                                                        UniqueFormattedDates.Add(uniqueformatteddate);

                                                        <th style="
                                                                  font-family: 'Roboto', sans-serif;
                                                                  text-align: center;
                                                                  font-weight: 500;
                                                                    font-size: 10px;
                                                                  border-radius: 4px;
                                                                  background-color: #919191;
                                                                  color: #fff;
                                                                  white-space: nowrap;
                                                                ">
                                                            @formattedDate
                                                        </th>
                                                    }

                                                }
                                            }

                                        }

                                    }
                                }
                            }





                        </tr>

                        @*Income data binding start*@
                        @foreach (var groupedtransaction in @Model.GroupedTransactions)
                        {
                            @if (groupedtransaction.GroupType.Split("__")[0] == "INCOME" && groupedtransaction.GroupedAccountData.Count > 0 && UniqueFormattedDates.Count > 0)
                            {
                                <tr>
                                    <td style="
                                          font-family: 'Roboto', sans-serif;
                                          font-size: 9px;
                                          border-radius: 4px;
                                          border: 1px solid #ddd;
                                          padding: 5px 10px;
                                          white-space: nowrap;
                                        ">
                                        @groupedtransaction.GroupType.Split("__")[1]
                                    </td>
                                    @foreach (var groupedaccountdata in @groupedtransaction.GroupedAccountData)
                                    {

                                        @if (@groupedaccountdata.Transactions.Count > 0)
                                        {

                                            @foreach (var headervalue in UniqueFormattedDates)
                                            {

                                                var filteredData = ((IEnumerable<dynamic>)groupedaccountdata.Transactions).FirstOrDefault(x => x.Date.Year ==
                                                headervalue.ActualValue.Year && x.Date.Month ==
                                                headervalue.ActualValue.Month);

                                                if (filteredData != null)
                                                {
                                                    <td style="
                                                              font-family: 'Roboto', sans-serif;
                                                              font-size: 9px;
                                                              border-radius: 4px;
                                                              border: 1px solid #ddd;
                                                              padding: 5px 10px;
                                                              white-space: nowrap;
                                                              text-align: right;
                                                            ">
                                                        $@filteredData.Amount
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td style="
                                                              font-family: 'Roboto', sans-serif;
                                                              font-size: 9px;
                                                              border-radius: 4px;
                                                              border: 1px solid #ddd;
                                                              padding: 5px 10px;
                                                              white-space: nowrap;
                                                              text-align: right;
                                                            ">
                                                        -
                                                    </td>
                                                }
                                            }

                                        }

                                    }

                                </tr>
                            }
                        }
                        @*Income data binding end*@
                    }
                </table>
                @*Income table start*@
            </td>
        </tr>
        <tr>
            <td align="center" colspan="2" style="padding: 30px 0;">
                <span style="background: linear-gradient(90deg, rgba(193, 139, 64, 0) -30%, rgba(193, 57, 19, 1) 27%, rgba(36, 112, 230, 1) 46%, rgba(62, 200, 159, 1) 72%, rgba(47, 237, 237, 1) 100%, rgba(245, 250, 255, 1) 100%); height: 2px; display: block;"></span>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <p style="margin: 0; font-size: 24px; font-weight: 400; font-family: 'Roboto', sans-serif;">
                    Monthly Expenses
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @*Expense table start*@
                <table class="calender-table" style="width: 80%; border-spacing: 5px;">
                    @if (true)
                    {
                        List<HeaderResponse> UniqueFormattedDates = new List<HeaderResponse>();
                        <tr>
                            <th></th>


                            @foreach (var groupedtransaction in @Model.GroupedTransactions)
                            {
                                @if (groupedtransaction.GroupType.Split("__")[0] == "EXPENSES" && groupedtransaction.GroupedAccountData.Count > 0)
                                {
                                    @foreach (var groupedaccountdata in @groupedtransaction.GroupedAccountData)
                                    {
                                     
                                        @if (@groupedaccountdata.Transactions.Count > 0)
                                        {

                                            @foreach (var transactions in @groupedaccountdata.Transactions)
                                            {
                                        
                                                if ((DateTime.TryParseExact(transactions.Date.ToString("yyyy-MM-ddTHH:mm:ss"), "yyyy-MM-ddTHH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime parsedDate))
                                                && UniqueFormattedDates.Count < 12)
                                                {
                                                    string formattedDate = parsedDate.ToString("MMM-yy");
                                                   

                                                    bool exists = UniqueFormattedDates.Any(value => value.FormattedValue == formattedDate);
                                                   
                                                    @if (!exists)
                                                    {
                                                        HeaderResponse uniqueformatteddate = new HeaderResponse();

                                                        uniqueformatteddate.ActualValue = transactions.Date;
                                                        uniqueformatteddate.FormattedValue = formattedDate;
                                                        UniqueFormattedDates.Add(uniqueformatteddate);

                                                           <th style="
                                                                  font-family: 'Roboto', sans-serif;
                                                                  text-align: center;
                                                                  font-weight: 500;
                                                                    font-size: 9px;
                                                                  border-radius: 4px;
                                                                  background-color: #919191;
                                                                  color: #fff;
                                                                  white-space: nowrap;
                                                                ">
                                                            @formattedDate
                                                            </th>

                        }

                        }
                                            }

                                        }

                                    }
                                }
                            }

                        </tr>

                        @*Expense data bindng start*@
                            @foreach (var groupedtransaction in @Model.GroupedTransactions)
                            {
                                @if (groupedtransaction.GroupType.Split("__")[0] == "EXPENSES" && groupedtransaction.GroupedAccountData.Count > 0 && UniqueFormattedDates.Count > 0)
                                {
                                    <tr>
                                    <td style="
                                          font-family: 'Roboto', sans-serif;
                                          font-size: 9px;
                                          border-radius: 4px;
                                          border: 1px solid #ddd;
                                          padding: 5px 10px;
                                          white-space: nowrap;
                                        ">
                                        @groupedtransaction.GroupType.Split("__")[1]
                                    </td>
                                    @foreach (var groupedaccountdata in @groupedtransaction.GroupedAccountData)
                                    {

                                        @if (@groupedaccountdata.Transactions.Count > 0)
                                        {

                                            @foreach (var headervalue in UniqueFormattedDates)
                                            {
                                                                                               
                                                   var filteredData = ((IEnumerable<dynamic>)groupedaccountdata.Transactions).FirstOrDefault(x => x.Date.Year ==
                                                    headervalue.ActualValue.Year && x.Date.Month ==
                                                    headervalue.ActualValue.Month);

                                                    if(filteredData != null)
                                                    {
                                                        <td style="
                                                              font-family: 'Roboto', sans-serif;
                                                              font-size: 9px;
                                                              border-radius: 4px;
                                                              border: 1px solid #ddd;
                                                              padding: 5px 10px;
                                                              white-space: nowrap;
                                                              text-align: right;
                                                            ">
                                                            $@filteredData.Amount
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td style="
                                                              font-family: 'Roboto', sans-serif;
                                                              font-size: 9px;
                                                              border-radius: 4px;
                                                              border: 1px solid #ddd;
                                                              padding: 5px 10px;
                                                              white-space: nowrap;
                                                              text-align: right;
                                                            ">
                                                            -
                                                        </td>
                                                    }
                                            }

                                        }

                                    }

                                    </tr>
                                }
                            }
                            @*Expense data binding end*@
           }
                </table>
                @*Expense table end*@
            </td>
        </tr>
    </table>
</body>
</html>
